#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
# 说明：使用eSirPlayground的代码并进行了一定程度上的修改
# 修改1：取消ssr插件，激活passwall插件
# 修改2：将customize.sh重命名为login-setting.sh
#=================================================

name: Build_x86_64 - 编译x86_64位固件

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
  #release:
  #  types: [published]

  #push:
  #  branches: 
  #    - master

  #schedule:
  #  - cron: 0 8 * * 5
  
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment - 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
    - name: Clone source code - 克隆源码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
        
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
         
    - name: Update & Install feeds - 上传&安装 提要
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
    
# 以下为passwall编译配置，已注释掉
    #- name: Import external feeds - 导入外部 提要 - passwall
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/xiaorouji/openwrt-passwall.git package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      
    
#以下为JerryKuKu Argon主题，已注释掉
    #- name: Import external feeds - 导入外部 提要 - JerryKuKu Argon
    #  working-directory: ./openwrt
    #  run: |
    #    git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git package/luci-theme-argon-jerrykuku

    - name: Configuration Customization - 根据配置文件对固件进行配置 - Build_x86_64
      env:
        CONFIG_FILE: 'x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./login-setting.sh && ./login-setting.sh
        cd openwrt && make defconfig
        
    - name: Download package - 下载 package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware - 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name : Upload artifact - 上传 artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
